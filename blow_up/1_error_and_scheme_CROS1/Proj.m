clear;
clc;

aa=(1+1i)/2;% переменная Схемы Розенброка
 e0=200;% 2/Малый парам 
 s=10;% Кол-во сгущений
 a=1;%начальное сгущение 
 U=3;%начальное значение функции
 
    %Цикл , который сгущает сетку
  for m = 1:1:s  
      m
    z=1;%перем для отбора на сгущ сетках
    n=1;%итерация в след цикле( так же для отбора нужных сгущю значений) 
    b=500*a; % Начальное кол-во интервалов !!!!!!
    T=3/b;% тау 
    U=3;%начальное значение функции
    X(m)=b;% количество делений(точность) для построения графика loglog( N, R) 

 %Цикл, который вычисляет значения функции
    for t= -1:T:2  
        if m == 1 % Самая первая сетка
         UU(m,n)=U;% несгущенная
         q=n;%Считаем кол-во элем в несгущ сетке
        end
        
        if m > 1
            if rem(n,a)== 1 %остаток от делен на сгущенность =1(Отбираем на сгущенных сетках нужные значения)
            UU(m,z)=U;% заполняем матрицу значений  
            N(m,z)=n;
          	z=z+1;%счетчик для сгущ значений
            end
        end
           
        w=(e0*U*(t+T/2-U))/(1-aa*T*e0*(t-2*U));%Сама схема
        W=real(w);
        U=U+T*W;% Получение нового значения                
        
        n=n+1;
    end 
    a=a*2;%Само сгущение сетки
    
  end
  
 r=2; %Параметр сгущения
 ff=1;%Индекс в матрице значений р
 v=1;%индекс в матице R, отвечающий за 3-х мерность(или переход к новому столбцу)
 pp=2;%Начальный порядок точности

 %цикл для Вычисления U с волной и R   1 Этап ( 1-й столбец)
 for k= ff:1:s-1
    R(k,:)=(UU(k+1,:)-UU(k,:))/(r^pp-1);%вычисляем R
    Uu(k,:)=UU(k+1,:)+R(k,:);%Вычисляем вектор уточненных значений
    dD(k,1)=sqrt(sum(R(k,:).*R(k,:)))/sqrt(sum(Uu(k,:).*Uu(k,:)))*100;%Относительная погрешность
    Y(1,k)=sqrt(sum(R(k,:).*R(k,:)));%значения для построения графика ( норма вектора ошибки)
 end
 %Цикл для Pэфф   1 Этап                                                          
 for k=ff:1:s-2
     h=sqrt(sum(R(k,:).*R(k,:)))/sqrt(sum(R(k+1,:).*R(k+1,:)));%отношение Rn и Rn+1
     p(k,1)=log(h)/log(r); %Соответственно само р                                       
 end
 % второй этап для Pэфф , U, R (остальные столбцы)
 while ff<s-1
     v=v+1;
    ff=ff+1;
    pp=pp+1;%увеличение точности при каждой итерации
     
    for k= ff:1:s-1
        R(k,:,v)= (Uu(k+1-ff+1,:,v-1)-Uu(k-ff+1,:,v-1))/(r^pp-1);%вычисляем R
        Uu(k,:,v)=Uu(k-ff+2,:,v-1)+R(k,:,v);%Вычисляем вектор уточненных значений
        dD(k,v)=sqrt(sum(R(k,:,v).*R(k,:,v)))/sqrt(sum(Uu(k,:,v).*Uu(k,:,v)))*100;%Относительная погрешность
        Y(v,k)=sqrt(sum(R(k,:,v).*R(k,:,v)));%значения для построения графика ( норма вектора R)
    end
    
    for k=ff:1:s-2
         h=sqrt(sum(R(k+1,:,v).*R(k+1,:,v)))/sqrt(sum(R(k,:,v).*R(k,:,v)));
         p(k,v)=log(h)/log(r)*(-1);      %остальные столбцы с р                                  
    end
   
 end
  color = ['b';'r'];%цвет
 
  %цикл построения графиков
 for k= 1:1:s-1
   
    
t=rem(k,2)+1;% для смены цветов
VarX=X(k:s-1);%отбор нужных нам значений в векторе с количеством значений
VarY=Y(k,k:s-1);%отбор нужных значений в матрице с нормами вектора R
 loglog(VarX,VarY,color(t)) ;%график

 hold on  %длал на разных
 end

     
  p  %вывод р
 dD;
%plot(X,Y,'-*b')